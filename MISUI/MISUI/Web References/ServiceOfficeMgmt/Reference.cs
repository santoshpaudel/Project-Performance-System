//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace MISUI.ServiceOfficeMgmt {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="OfficeManagementServiceSoap", Namespace="http://tempuri.org/")]
    public partial class OfficeManagementService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private AuthSoapHd authSoapHdValueField;
        
        private System.Threading.SendOrPostCallback DeleteOfficeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchOfficeHierarchyOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOfficeOperationCompleted;
        
        private System.Threading.SendOrPostCallback PopulateOfficeDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback populateOfficeTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchAllOfficeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchOfficeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public OfficeManagementService() {
            this.Url = global::MISUI.Properties.Settings.Default.MISUI_ServiceOfficeMgmt_OfficeManagementService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public AuthSoapHd AuthSoapHdValue {
            get {
                return this.authSoapHdValueField;
            }
            set {
                this.authSoapHdValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event DeleteOfficeCompletedEventHandler DeleteOfficeCompleted;
        
        /// <remarks/>
        public event FetchOfficeHierarchyCompletedEventHandler FetchOfficeHierarchyCompleted;
        
        /// <remarks/>
        public event AddOfficeCompletedEventHandler AddOfficeCompleted;
        
        /// <remarks/>
        public event PopulateOfficeDetailsCompletedEventHandler PopulateOfficeDetailsCompleted;
        
        /// <remarks/>
        public event populateOfficeTypeCompletedEventHandler populateOfficeTypeCompleted;
        
        /// <remarks/>
        public event FetchAllOfficeCompletedEventHandler FetchAllOfficeCompleted;
        
        /// <remarks/>
        public event FetchOfficeCompletedEventHandler FetchOfficeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteOffice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteOffice(string id) {
            this.Invoke("DeleteOffice", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void DeleteOfficeAsync(string id) {
            this.DeleteOfficeAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteOfficeAsync(string id, object userState) {
            if ((this.DeleteOfficeOperationCompleted == null)) {
                this.DeleteOfficeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOfficeOperationCompleted);
            }
            this.InvokeAsync("DeleteOffice", new object[] {
                        id}, this.DeleteOfficeOperationCompleted, userState);
        }
        
        private void OnDeleteOfficeOperationCompleted(object arg) {
            if ((this.DeleteOfficeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOfficeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FetchOfficeHierarchy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable FetchOfficeHierarchy(int id) {
            object[] results = this.Invoke("FetchOfficeHierarchy", new object[] {
                        id});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void FetchOfficeHierarchyAsync(int id) {
            this.FetchOfficeHierarchyAsync(id, null);
        }
        
        /// <remarks/>
        public void FetchOfficeHierarchyAsync(int id, object userState) {
            if ((this.FetchOfficeHierarchyOperationCompleted == null)) {
                this.FetchOfficeHierarchyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchOfficeHierarchyOperationCompleted);
            }
            this.InvokeAsync("FetchOfficeHierarchy", new object[] {
                        id}, this.FetchOfficeHierarchyOperationCompleted, userState);
        }
        
        private void OnFetchOfficeHierarchyOperationCompleted(object arg) {
            if ((this.FetchOfficeHierarchyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchOfficeHierarchyCompleted(this, new FetchOfficeHierarchyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddOffice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddOffice(ComOffice objComOffice, int entryMode, int officeId) {
            object[] results = this.Invoke("AddOffice", new object[] {
                        objComOffice,
                        entryMode,
                        officeId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddOfficeAsync(ComOffice objComOffice, int entryMode, int officeId) {
            this.AddOfficeAsync(objComOffice, entryMode, officeId, null);
        }
        
        /// <remarks/>
        public void AddOfficeAsync(ComOffice objComOffice, int entryMode, int officeId, object userState) {
            if ((this.AddOfficeOperationCompleted == null)) {
                this.AddOfficeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOfficeOperationCompleted);
            }
            this.InvokeAsync("AddOffice", new object[] {
                        objComOffice,
                        entryMode,
                        officeId}, this.AddOfficeOperationCompleted, userState);
        }
        
        private void OnAddOfficeOperationCompleted(object arg) {
            if ((this.AddOfficeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOfficeCompleted(this, new AddOfficeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PopulateOfficeDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable PopulateOfficeDetails(int i) {
            object[] results = this.Invoke("PopulateOfficeDetails", new object[] {
                        i});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void PopulateOfficeDetailsAsync(int i) {
            this.PopulateOfficeDetailsAsync(i, null);
        }
        
        /// <remarks/>
        public void PopulateOfficeDetailsAsync(int i, object userState) {
            if ((this.PopulateOfficeDetailsOperationCompleted == null)) {
                this.PopulateOfficeDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPopulateOfficeDetailsOperationCompleted);
            }
            this.InvokeAsync("PopulateOfficeDetails", new object[] {
                        i}, this.PopulateOfficeDetailsOperationCompleted, userState);
        }
        
        private void OnPopulateOfficeDetailsOperationCompleted(object arg) {
            if ((this.PopulateOfficeDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PopulateOfficeDetailsCompleted(this, new PopulateOfficeDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/populateOfficeType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable populateOfficeType() {
            object[] results = this.Invoke("populateOfficeType", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void populateOfficeTypeAsync() {
            this.populateOfficeTypeAsync(null);
        }
        
        /// <remarks/>
        public void populateOfficeTypeAsync(object userState) {
            if ((this.populateOfficeTypeOperationCompleted == null)) {
                this.populateOfficeTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpopulateOfficeTypeOperationCompleted);
            }
            this.InvokeAsync("populateOfficeType", new object[0], this.populateOfficeTypeOperationCompleted, userState);
        }
        
        private void OnpopulateOfficeTypeOperationCompleted(object arg) {
            if ((this.populateOfficeTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.populateOfficeTypeCompleted(this, new populateOfficeTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FetchAllOffice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable FetchAllOffice(string lang) {
            object[] results = this.Invoke("FetchAllOffice", new object[] {
                        lang});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void FetchAllOfficeAsync(string lang) {
            this.FetchAllOfficeAsync(lang, null);
        }
        
        /// <remarks/>
        public void FetchAllOfficeAsync(string lang, object userState) {
            if ((this.FetchAllOfficeOperationCompleted == null)) {
                this.FetchAllOfficeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchAllOfficeOperationCompleted);
            }
            this.InvokeAsync("FetchAllOffice", new object[] {
                        lang}, this.FetchAllOfficeOperationCompleted, userState);
        }
        
        private void OnFetchAllOfficeOperationCompleted(object arg) {
            if ((this.FetchAllOfficeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchAllOfficeCompleted(this, new FetchAllOfficeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FetchOffice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FetchOffice(string id) {
            this.Invoke("FetchOffice", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void FetchOfficeAsync(string id) {
            this.FetchOfficeAsync(id, null);
        }
        
        /// <remarks/>
        public void FetchOfficeAsync(string id, object userState) {
            if ((this.FetchOfficeOperationCompleted == null)) {
                this.FetchOfficeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchOfficeOperationCompleted);
            }
            this.InvokeAsync("FetchOffice", new object[] {
                        id}, this.FetchOfficeOperationCompleted, userState);
        }
        
        private void OnFetchOfficeOperationCompleted(object arg) {
            if ((this.FetchOfficeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchOfficeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class AuthSoapHd : System.Web.Services.Protocols.SoapHeader {
        
        private string strUserNameField;
        
        private string strPasswordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string strUserName {
            get {
                return this.strUserNameField;
            }
            set {
                this.strUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string strPassword {
            get {
                return this.strPasswordField;
            }
            set {
                this.strPasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ComOffice {
        
        private string officeEnglishNameField;
        
        private string officeNepaliNameField;
        
        private int officeParentIdField;
        
        private int officeTypeIdField;
        
        private int ministryIdField;
        
        private int vdcMunIdField;
        
        private int districtIdField;
        
        private int isEnableField;
        
        /// <remarks/>
        public string officeEnglishName {
            get {
                return this.officeEnglishNameField;
            }
            set {
                this.officeEnglishNameField = value;
            }
        }
        
        /// <remarks/>
        public string officeNepaliName {
            get {
                return this.officeNepaliNameField;
            }
            set {
                this.officeNepaliNameField = value;
            }
        }
        
        /// <remarks/>
        public int officeParentId {
            get {
                return this.officeParentIdField;
            }
            set {
                this.officeParentIdField = value;
            }
        }
        
        /// <remarks/>
        public int officeTypeId {
            get {
                return this.officeTypeIdField;
            }
            set {
                this.officeTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public int ministryId {
            get {
                return this.ministryIdField;
            }
            set {
                this.ministryIdField = value;
            }
        }
        
        /// <remarks/>
        public int vdcMunId {
            get {
                return this.vdcMunIdField;
            }
            set {
                this.vdcMunIdField = value;
            }
        }
        
        /// <remarks/>
        public int districtId {
            get {
                return this.districtIdField;
            }
            set {
                this.districtIdField = value;
            }
        }
        
        /// <remarks/>
        public int isEnable {
            get {
                return this.isEnableField;
            }
            set {
                this.isEnableField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteOfficeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void FetchOfficeHierarchyCompletedEventHandler(object sender, FetchOfficeHierarchyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchOfficeHierarchyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchOfficeHierarchyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddOfficeCompletedEventHandler(object sender, AddOfficeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOfficeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOfficeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void PopulateOfficeDetailsCompletedEventHandler(object sender, PopulateOfficeDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PopulateOfficeDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PopulateOfficeDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void populateOfficeTypeCompletedEventHandler(object sender, populateOfficeTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class populateOfficeTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal populateOfficeTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void FetchAllOfficeCompletedEventHandler(object sender, FetchAllOfficeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchAllOfficeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchAllOfficeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void FetchOfficeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591