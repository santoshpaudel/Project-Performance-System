//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace MISUI.ServiceMenu {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceMenuManagementSoap", Namespace="http://tempuri.org/")]
    public partial class ServiceMenuManagement : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback testOperationCompleted;
        
        private AuthSoapHd authSoapHdValueField;
        
        private System.Threading.SendOrPostCallback DeleteMenuOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchMenuHierarchyOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchMenuPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMenuOperationCompleted;
        
        private System.Threading.SendOrPostCallback PopulateMenuDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchMenuOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ServiceMenuManagement() {
            this.Url = global::MISUI.Properties.Settings.Default.MISUI_ServiceMenu_ServiceMenuManagement;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public AuthSoapHd AuthSoapHdValue {
            get {
                return this.authSoapHdValueField;
            }
            set {
                this.authSoapHdValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event testCompletedEventHandler testCompleted;
        
        /// <remarks/>
        public event DeleteMenuCompletedEventHandler DeleteMenuCompleted;
        
        /// <remarks/>
        public event FetchMenuHierarchyCompletedEventHandler FetchMenuHierarchyCompleted;
        
        /// <remarks/>
        public event FetchMenuPermissionCompletedEventHandler FetchMenuPermissionCompleted;
        
        /// <remarks/>
        public event ChangePermissionCompletedEventHandler ChangePermissionCompleted;
        
        /// <remarks/>
        public event AddMenuCompletedEventHandler AddMenuCompleted;
        
        /// <remarks/>
        public event PopulateMenuDetailsCompletedEventHandler PopulateMenuDetailsCompleted;
        
        /// <remarks/>
        public event FetchMenuCompletedEventHandler FetchMenuCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/test", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void test(string menuId) {
            this.Invoke("test", new object[] {
                        menuId});
        }
        
        /// <remarks/>
        public void testAsync(string menuId) {
            this.testAsync(menuId, null);
        }
        
        /// <remarks/>
        public void testAsync(string menuId, object userState) {
            if ((this.testOperationCompleted == null)) {
                this.testOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestOperationCompleted);
            }
            this.InvokeAsync("test", new object[] {
                        menuId}, this.testOperationCompleted, userState);
        }
        
        private void OntestOperationCompleted(object arg) {
            if ((this.testCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteMenu", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteMenu(string id) {
            this.Invoke("DeleteMenu", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void DeleteMenuAsync(string id) {
            this.DeleteMenuAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteMenuAsync(string id, object userState) {
            if ((this.DeleteMenuOperationCompleted == null)) {
                this.DeleteMenuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMenuOperationCompleted);
            }
            this.InvokeAsync("DeleteMenu", new object[] {
                        id}, this.DeleteMenuOperationCompleted, userState);
        }
        
        private void OnDeleteMenuOperationCompleted(object arg) {
            if ((this.DeleteMenuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMenuCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FetchMenuHierarchy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable FetchMenuHierarchy(int id, string lang, int roleId) {
            object[] results = this.Invoke("FetchMenuHierarchy", new object[] {
                        id,
                        lang,
                        roleId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void FetchMenuHierarchyAsync(int id, string lang, int roleId) {
            this.FetchMenuHierarchyAsync(id, lang, roleId, null);
        }
        
        /// <remarks/>
        public void FetchMenuHierarchyAsync(int id, string lang, int roleId, object userState) {
            if ((this.FetchMenuHierarchyOperationCompleted == null)) {
                this.FetchMenuHierarchyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchMenuHierarchyOperationCompleted);
            }
            this.InvokeAsync("FetchMenuHierarchy", new object[] {
                        id,
                        lang,
                        roleId}, this.FetchMenuHierarchyOperationCompleted, userState);
        }
        
        private void OnFetchMenuHierarchyOperationCompleted(object arg) {
            if ((this.FetchMenuHierarchyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchMenuHierarchyCompleted(this, new FetchMenuHierarchyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FetchMenuPermission", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FetchMenuPermission(int module, int role) {
            object[] results = this.Invoke("FetchMenuPermission", new object[] {
                        module,
                        role});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FetchMenuPermissionAsync(int module, int role) {
            this.FetchMenuPermissionAsync(module, role, null);
        }
        
        /// <remarks/>
        public void FetchMenuPermissionAsync(int module, int role, object userState) {
            if ((this.FetchMenuPermissionOperationCompleted == null)) {
                this.FetchMenuPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchMenuPermissionOperationCompleted);
            }
            this.InvokeAsync("FetchMenuPermission", new object[] {
                        module,
                        role}, this.FetchMenuPermissionOperationCompleted, userState);
        }
        
        private void OnFetchMenuPermissionOperationCompleted(object arg) {
            if ((this.FetchMenuPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchMenuPermissionCompleted(this, new FetchMenuPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangePermission", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangePermission(ComMenuRolePermissionBO objBo) {
            this.Invoke("ChangePermission", new object[] {
                        objBo});
        }
        
        /// <remarks/>
        public void ChangePermissionAsync(ComMenuRolePermissionBO objBo) {
            this.ChangePermissionAsync(objBo, null);
        }
        
        /// <remarks/>
        public void ChangePermissionAsync(ComMenuRolePermissionBO objBo, object userState) {
            if ((this.ChangePermissionOperationCompleted == null)) {
                this.ChangePermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePermissionOperationCompleted);
            }
            this.InvokeAsync("ChangePermission", new object[] {
                        objBo}, this.ChangePermissionOperationCompleted, userState);
        }
        
        private void OnChangePermissionOperationCompleted(object arg) {
            if ((this.ChangePermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePermissionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddMenu", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddMenu(ComMenu objComMenu, int entryMode, int menuId) {
            object[] results = this.Invoke("AddMenu", new object[] {
                        objComMenu,
                        entryMode,
                        menuId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddMenuAsync(ComMenu objComMenu, int entryMode, int menuId) {
            this.AddMenuAsync(objComMenu, entryMode, menuId, null);
        }
        
        /// <remarks/>
        public void AddMenuAsync(ComMenu objComMenu, int entryMode, int menuId, object userState) {
            if ((this.AddMenuOperationCompleted == null)) {
                this.AddMenuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMenuOperationCompleted);
            }
            this.InvokeAsync("AddMenu", new object[] {
                        objComMenu,
                        entryMode,
                        menuId}, this.AddMenuOperationCompleted, userState);
        }
        
        private void OnAddMenuOperationCompleted(object arg) {
            if ((this.AddMenuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMenuCompleted(this, new AddMenuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PopulateMenuDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable PopulateMenuDetails(int menuId) {
            object[] results = this.Invoke("PopulateMenuDetails", new object[] {
                        menuId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void PopulateMenuDetailsAsync(int menuId) {
            this.PopulateMenuDetailsAsync(menuId, null);
        }
        
        /// <remarks/>
        public void PopulateMenuDetailsAsync(int menuId, object userState) {
            if ((this.PopulateMenuDetailsOperationCompleted == null)) {
                this.PopulateMenuDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPopulateMenuDetailsOperationCompleted);
            }
            this.InvokeAsync("PopulateMenuDetails", new object[] {
                        menuId}, this.PopulateMenuDetailsOperationCompleted, userState);
        }
        
        private void OnPopulateMenuDetailsOperationCompleted(object arg) {
            if ((this.PopulateMenuDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PopulateMenuDetailsCompleted(this, new PopulateMenuDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FetchMenu", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FetchMenu(string id, string lang, int roleId) {
            this.Invoke("FetchMenu", new object[] {
                        id,
                        lang,
                        roleId});
        }
        
        /// <remarks/>
        public void FetchMenuAsync(string id, string lang, int roleId) {
            this.FetchMenuAsync(id, lang, roleId, null);
        }
        
        /// <remarks/>
        public void FetchMenuAsync(string id, string lang, int roleId, object userState) {
            if ((this.FetchMenuOperationCompleted == null)) {
                this.FetchMenuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchMenuOperationCompleted);
            }
            this.InvokeAsync("FetchMenu", new object[] {
                        id,
                        lang,
                        roleId}, this.FetchMenuOperationCompleted, userState);
        }
        
        private void OnFetchMenuOperationCompleted(object arg) {
            if ((this.FetchMenuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchMenuCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class AuthSoapHd : System.Web.Services.Protocols.SoapHeader {
        
        private string strUserNameField;
        
        private string strPasswordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string strUserName {
            get {
                return this.strUserNameField;
            }
            set {
                this.strUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string strPassword {
            get {
                return this.strPasswordField;
            }
            set {
                this.strPasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ComMenu {
        
        private string menuEnglishNameField;
        
        private string menuNepaliNameField;
        
        private int menuParentIdField;
        
        private int menuTypeIdField;
        
        private int menuLevelField;
        
        private string menuPathField;
        
        /// <remarks/>
        public string menuEnglishName {
            get {
                return this.menuEnglishNameField;
            }
            set {
                this.menuEnglishNameField = value;
            }
        }
        
        /// <remarks/>
        public string menuNepaliName {
            get {
                return this.menuNepaliNameField;
            }
            set {
                this.menuNepaliNameField = value;
            }
        }
        
        /// <remarks/>
        public int menuParentId {
            get {
                return this.menuParentIdField;
            }
            set {
                this.menuParentIdField = value;
            }
        }
        
        /// <remarks/>
        public int menuTypeId {
            get {
                return this.menuTypeIdField;
            }
            set {
                this.menuTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public int menuLevel {
            get {
                return this.menuLevelField;
            }
            set {
                this.menuLevelField = value;
            }
        }
        
        /// <remarks/>
        public string menuPath {
            get {
                return this.menuPathField;
            }
            set {
                this.menuPathField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ComMenuRolePermissionBO {
        
        private decimal permissionMapIdField;
        
        private decimal roleIdField;
        
        private decimal menuIdField;
        
        private decimal allowAddField;
        
        private decimal allowDeleteField;
        
        private decimal allowEditField;
        
        private decimal allowVerifyLevel1Field;
        
        private decimal allowVerifyLevel2Field;
        
        private decimal allowVerifyLevel3Field;
        
        private decimal allowVerifyLevel4Field;
        
        private decimal allowViewField;
        
        private string modeField;
        
        private string permissionModeField;
        
        /// <remarks/>
        public decimal PermissionMapId {
            get {
                return this.permissionMapIdField;
            }
            set {
                this.permissionMapIdField = value;
            }
        }
        
        /// <remarks/>
        public decimal RoleId {
            get {
                return this.roleIdField;
            }
            set {
                this.roleIdField = value;
            }
        }
        
        /// <remarks/>
        public decimal MenuId {
            get {
                return this.menuIdField;
            }
            set {
                this.menuIdField = value;
            }
        }
        
        /// <remarks/>
        public decimal AllowAdd {
            get {
                return this.allowAddField;
            }
            set {
                this.allowAddField = value;
            }
        }
        
        /// <remarks/>
        public decimal AllowDelete {
            get {
                return this.allowDeleteField;
            }
            set {
                this.allowDeleteField = value;
            }
        }
        
        /// <remarks/>
        public decimal AllowEdit {
            get {
                return this.allowEditField;
            }
            set {
                this.allowEditField = value;
            }
        }
        
        /// <remarks/>
        public decimal AllowVerifyLevel1 {
            get {
                return this.allowVerifyLevel1Field;
            }
            set {
                this.allowVerifyLevel1Field = value;
            }
        }
        
        /// <remarks/>
        public decimal AllowVerifyLevel2 {
            get {
                return this.allowVerifyLevel2Field;
            }
            set {
                this.allowVerifyLevel2Field = value;
            }
        }
        
        /// <remarks/>
        public decimal AllowVerifyLevel3 {
            get {
                return this.allowVerifyLevel3Field;
            }
            set {
                this.allowVerifyLevel3Field = value;
            }
        }
        
        /// <remarks/>
        public decimal AllowVerifyLevel4 {
            get {
                return this.allowVerifyLevel4Field;
            }
            set {
                this.allowVerifyLevel4Field = value;
            }
        }
        
        /// <remarks/>
        public decimal AllowView {
            get {
                return this.allowViewField;
            }
            set {
                this.allowViewField = value;
            }
        }
        
        /// <remarks/>
        public string Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
            }
        }
        
        /// <remarks/>
        public string PermissionMode {
            get {
                return this.permissionModeField;
            }
            set {
                this.permissionModeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void testCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteMenuCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void FetchMenuHierarchyCompletedEventHandler(object sender, FetchMenuHierarchyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchMenuHierarchyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchMenuHierarchyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void FetchMenuPermissionCompletedEventHandler(object sender, FetchMenuPermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchMenuPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchMenuPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ChangePermissionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddMenuCompletedEventHandler(object sender, AddMenuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMenuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMenuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void PopulateMenuDetailsCompletedEventHandler(object sender, PopulateMenuDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PopulateMenuDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PopulateMenuDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void FetchMenuCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591